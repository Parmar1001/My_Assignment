# -*- coding: utf-8 -*-
"""BestPeers_Subscription

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OLw-RcRLWfTVZHmNOq213-deqntNxN7s
"""

# BestPeersSubscription

from datetime import datetime
from calendar import monthrange

class Bestpeers:
  def calculate_subscription(self,expiry_date,months_to_buy,monthly_cost,annual_cost):
      expiry_date=datetime.strptime(expiry_date,"%d/%m/%Y")
      if months_to_buy==12:
         new_expiry=0
         if expiry_date.day<=15:
            extra_days=15-expiry_date.day
            new_expiry=datetime.strptime("15/"+str(expiry_date.month)+str(expiry_date.year+1),"%d/%m/%Y")
         else:
            extra_days=monthrange(expiry_date.year,expiry_date.month)[1]+1-expiry_date.day
            try:
              new_expiry=datetime.strptime("01/"+str(expiry_date.month+1)+"/"+str(expiry_date.year+1),"%d/%m/%Y")
              #print("hello")
            except:
              new_expiry=datetime.strptime("01/01/"+str(expiry_date.year+2),"%d/%m/%Y")
         cost=annual_cost+extra_days*annual_cost/365
         return (cost,new_expiry) 
      elif months_to_buy==1:
         new_expiry=0
         if expiry_date.day<=15:
           days=monthrange(expiry_date.year,expiry_date.month)+1-expiry_date.day
           try:
              cost=days*monthly_cost/30
              new_expiry=datetime.strptime("01/"+str(expiry_date.month+1)+"/"+str(expiry_date.year),"%d/%m/%Y")
              
           except:
              new_expiry=datetime.strptime("01/01/"+str(expiry_date.year+1),"%d/%m/%Y")
         else:
           
           days=monthrange(expiry_date.year,expiry_date.month)[1]+16-expiry_date.day
           try:
              cost=days*monthly_cost/30
              new_expiry=datetime.strptime("15/"+str(expiry_date.month+1)+"/"+str(expiry_date.year),"%d/%m/%Y")
              #print("hello")
           except:
              new_expiry=datetime.strptime("15/01/"+str(expiry_date.year+1),"%d/%m/%Y")
         return (cost,new_expiry)
      elif (months_to_buy>1) and (months_to_buy<12):
          new_expiry=0
          if expiry_date.day<=15:
           extra_days=monthrange(expiry_date.year,expiry_date.month)[1]+1-expiry_date.day
           try:
              cost=(extra_days*monthly_cost/30)+(months_to_buy-1)*monthly_cost
              new_expiry=datetime.strptime("01/"+str(expiry_date.month+months_to_buy)+"/"+str(expiry_date.year),"%d/%m/%Y")
              
           except:
              new_expiry=datetime.strptime("01/"+str(months_to_buy)+"/"+str(expiry_date.year+1),"%d/%m/%Y")
          else:
           
           extra_days=monthrange(expiry_date.year,expiry_date.month)[1]+16-expiry_date.day
           
           try:
              cost=(extra_days*monthly_cost/30)+(months_to_buy-1)*monthly_cost
              new_expiry=datetime.strptime("15/"+str(expiry_date.month+months_to_buy)+"/"+str(expiry_date.year),"%d/%m/%Y")
              #print("hello")
           except:
              new_expiry=datetime.strptime("15/"+str(months_to_buy)+"/"+str(expiry_date.year+1),"%d/%m/%Y")
          return (cost,new_expiry)
expiry_date=input("Enter expiry date in 'dd/MM/yyyy' format : ")
months_to_buy=int(input("Enter months to buy : "))
monthly_cost=int(input("Enter monthly cost : "))
annual_cost=int(input("Enter annual cost : "))
Bestpeers().calculate_subscription(expiry_date,months_to_buy,monthly_cost,annual_cost)